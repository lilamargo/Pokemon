{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lilal\\\\Desktop\\\\Pokemon Project\\\\PI-Pokemon\\\\Pokemon\\\\PI-Pokemon-main\\\\client\\\\src\\\\components\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPokemons } from '../actions/index.js';\nimport { Link } from 'react-router-dom';\nimport Card from './Card';\nimport Paginado from './Paginado';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const dispatch = useDispatch(); //Para utilizar esa constante e ir despachando esas acciones.\n\n  const allPokemones = useSelector(state => state.pokemones);\n  /*-----------------------------Paginado--------------------------------*/\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pokemonesPerPage, setPokemonesPerPage] = useState(12);\n  const indexOfLastPokemon = currentPage * pokemonesPerPage;\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonesPerPage;\n  const currentPokemones = allPokemones.slice(indexOfFirstPokemon, indexOfLastPokemon);\n\n  const paginado = pageNumber => {\n    setCurrentPage(pageNumber);\n    /*Setear el número de página, ayudará al renderizado*/\n  };\n\n  useEffect(() => {\n    dispatch(getPokemons());\n  }, [dispatch]);\n\n  function handleClick(e) {\n    e.preventDefault();\n    dispatch(getPokemons());\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/pokemon\",\n      children: \" Crear Personaje \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" POKEMON \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => {\n        handleClick(e);\n      },\n      children: \"Volver a cargar a todos los personajes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Orden Alfab\\xE9tico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"asc\",\n          children: \" Ascendente \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"desc\",\n          children: \" Descendente \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Existentes y Creados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \" Existentes \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \" Creados \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Orden por Tipos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \" Tipos \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Orden por Puntos de Fuerza\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"asc\",\n          children: \" Ascendente \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"desc\",\n          children: \" Descendente \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), \"/*-------Renderizar el paginado------*/\", /*#__PURE__*/_jsxDEV(Paginado, {\n        pokemonesPerPage: pokemonesPerPage,\n        allPokemones: allPokemones.length,\n        paginado: paginado\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), \"/*-----------Renderizar todos los pokemones por p\\xE1gina-------*/\", currentPokemones === null || currentPokemones === void 0 ? void 0 : currentPokemones.map(el => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: '/home/' + el.id,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              name: el.name,\n              image: el.image,\n              tipo: el.tipo.map(n => n.name + ' ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)\n        }, void 0, false);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"VG7i6EWqUW9xsif37HZYvzzrjl0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Home;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/lilal/Desktop/Pokemon Project/PI-Pokemon/Pokemon/PI-Pokemon-main/client/src/components/Home.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","getPokemons","Link","Card","Paginado","Home","dispatch","allPokemones","state","pokemones","currentPage","setCurrentPage","pokemonesPerPage","setPokemonesPerPage","indexOfLastPokemon","indexOfFirstPokemon","currentPokemones","slice","paginado","pageNumber","handleClick","e","preventDefault","length","map","el","id","name","image","tipo","n"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getPokemons } from '../actions/index.js';\r\nimport { Link } from 'react-router-dom';\r\nimport  Card from './Card';\r\nimport Paginado from './Paginado';\r\n\r\n\r\nexport default function Home (){\r\n\r\nconst dispatch = useDispatch() //Para utilizar esa constante e ir despachando esas acciones.\r\nconst allPokemones = useSelector((state) => state.pokemones)\r\n\r\n/*-----------------------------Paginado--------------------------------*/\r\nconst [currentPage, setCurrentPage] = useState(1)\r\nconst [pokemonesPerPage, setPokemonesPerPage] = useState(12)\r\nconst indexOfLastPokemon = currentPage * pokemonesPerPage\r\nconst indexOfFirstPokemon = indexOfLastPokemon - pokemonesPerPage\r\nconst currentPokemones = allPokemones.slice(indexOfFirstPokemon, indexOfLastPokemon)\r\n\r\nconst paginado = (pageNumber) => {\r\n  setCurrentPage(pageNumber)           /*Setear el número de página, ayudará al renderizado*/\r\n}\r\n\r\n  useEffect(() => {\r\n    dispatch(getPokemons())\r\n  }, [dispatch]);\r\n\r\n  function handleClick(e){\r\ne.preventDefault();\r\ndispatch(getPokemons());\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Link to='/pokemon'> Crear Personaje </Link>\r\n       <h1> POKEMON </h1>\r\n       <button onClick = {(e) => {handleClick(e)}}>\r\n          Volver a cargar a todos los personajes\r\n       </button>\r\n       <div>\r\n\r\n      <label>Orden Alfabético</label>\r\n          <select>\r\n            <option value= 'asc'> Ascendente </option>\r\n            <option value= 'desc'> Descendente </option>\r\n          </select>\r\n\r\n\r\n      <label>Existentes y Creados</label>\r\n          <select>\r\n            <option> Existentes </option>\r\n            <option> Creados </option>\r\n          </select>\r\n\r\n\r\n      <label>Orden por Tipos</label>\r\n          <select>\r\n            <option> Tipos </option>\r\n          </select>\r\n\r\n\r\n      <label>Orden por Puntos de Fuerza</label>\r\n          <select>\r\n          <option value= 'asc'> Ascendente </option>\r\n          <option value= 'desc'> Descendente </option>\r\n          </select>\r\n\r\n          /*-------Renderizar el paginado------*/\r\n          <Paginado\r\n          pokemonesPerPage = {pokemonesPerPage}\r\n          allPokemones = {allPokemones.length}\r\n          paginado = {paginado}\r\n          />\r\n\r\n          /*-----------Renderizar todos los pokemones por página-------*/\r\n          {\r\n            currentPokemones?.map(el => {\r\n              return (\r\n                <>\r\n                <Link to={'/home/' + el.id}>\r\n                  <Card name={el.name} image={el.image} tipo={el.tipo.map(n => n.name + ' ')} />\r\n                </Link>\r\n                </>\r\n              )\r\n            })\r\n          }\r\n       </div>\r\n    </div>\r\n  )\r\n};\r\n"]},"metadata":{},"sourceType":"module"}