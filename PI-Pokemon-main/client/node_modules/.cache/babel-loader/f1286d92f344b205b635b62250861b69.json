{"ast":null,"code":"const initialState = {\n  pokemones: [],\n  allPokemones: [],\n  arrayTipos: [],\n  detail: []\n};\n\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"GET_POKEMONS\":\n      return { ...state,\n        pokemones: action.payload,\n        allPokemones: action.payload\n      };\n\n    case \"GET_NAME_POKEMONES\":\n      return { ...state,\n        pokemones: action.payload\n      };\n\n    case \"POST_POKEMON\":\n      return { ...state\n      };\n\n    case \"GET_TIPOS\":\n      return { ...state,\n        arrayTipos: action.payload\n      };\n\n    case \"FILTER_CREATED\":\n      const createdFilter = action.payload === \"created\" ? state.allPokemones.filter(el => el.createInDb) : state.allPokemones.filter(el => !el.createInDb);\n      return { ...state,\n        pokemones: createdFilter\n      };\n\n    case \"FILTER_TIPOS\":\n      const filtrar = state.allPokemones.filter(el => !el.tipo.includes(action.payload));\n      return { ...state,\n        pokemones: filtrar\n      };\n\n    case \"ORDER_ALFABETICO\":\n      let sortedArr = action.payload === \"asc\" ? state.pokemones.sort(function (a, b) {\n        if (a.name > b.name) {\n          return 1;\n        }\n\n        if (b.name > a.name) {\n          return -1;\n        }\n\n        return 0;\n      }) : state.pokemones.sort(function (a, b) {\n        if (a.name > b.name) {\n          return -1;\n        }\n\n        if (b.name > a.name) {\n          return 1;\n        }\n\n        return 0;\n      });\n      return { ...state,\n        pokemones: sortedArr\n      };\n\n    case \"GET_DETAILS\":\n      return { ...state,\n        detail: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/lilal/Desktop/Pokemon Project/PI-Pokemon/Pokemon/PI-Pokemon-main/client/src/reducer/index.js"],"names":["initialState","pokemones","allPokemones","arrayTipos","detail","rootReducer","state","action","type","payload","createdFilter","filter","el","createInDb","filtrar","tipo","includes","sortedArr","sort","a","b","name"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,EADQ;AAEnBC,EAAAA,YAAY,EAAE,EAFK;AAGnBC,EAAAA,UAAU,EAAE,EAHO;AAInBC,EAAAA,MAAM,EAAE;AAJW,CAArB;;AAOA,SAASC,WAAT,GAAmD;AAAA,MAA9BC,KAA8B,uEAAtBN,YAAsB;AAAA,MAARO,MAAQ;;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELL,QAAAA,SAAS,EAAEM,MAAM,CAACE,OAFb;AAGLP,QAAAA,YAAY,EAAEK,MAAM,CAACE;AAHhB,OAAP;;AAMF,SAAK,oBAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELL,QAAAA,SAAS,EAAEM,MAAM,CAACE;AAFb,OAAP;;AAKF,SAAK,cAAL;AACE,aAAO,EACL,GAAGH;AADE,OAAP;;AAIF,SAAK,WAAL;AACE,aAAO,EACL,GAAGA,KADE;AAELH,QAAAA,UAAU,EAAEI,MAAM,CAACE;AAFd,OAAP;;AAKF,SAAK,gBAAL;AACE,YAAMC,aAAa,GACjBH,MAAM,CAACE,OAAP,KAAmB,SAAnB,GACIH,KAAK,CAACJ,YAAN,CAAmBS,MAAnB,CAA2BC,EAAD,IAAQA,EAAE,CAACC,UAArC,CADJ,GAEIP,KAAK,CAACJ,YAAN,CAAmBS,MAAnB,CAA2BC,EAAD,IAAQ,CAACA,EAAE,CAACC,UAAtC,CAHN;AAIA,aAAO,EACL,GAAGP,KADE;AAELL,QAAAA,SAAS,EAAES;AAFN,OAAP;;AAIF,SAAK,cAAL;AACE,YAAMI,OAAO,GAAGR,KAAK,CAACJ,YAAN,CAAmBS,MAAnB,CACbC,EAAD,IAAQ,CAACA,EAAE,CAACG,IAAH,CAAQC,QAAR,CAAiBT,MAAM,CAACE,OAAxB,CADK,CAAhB;AAGA,aAAO,EACL,GAAGH,KADE;AAELL,QAAAA,SAAS,EAAEa;AAFN,OAAP;;AAKF,SAAK,kBAAL;AACE,UAAIG,SAAS,GACXV,MAAM,CAACE,OAAP,KAAmB,KAAnB,GACIH,KAAK,CAACL,SAAN,CAAgBiB,IAAhB,CAAqB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACnC,YAAID,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB;AACnB,iBAAO,CAAP;AACD;;AACD,YAAID,CAAC,CAACC,IAAF,GAASF,CAAC,CAACE,IAAf,EAAqB;AACnB,iBAAO,CAAC,CAAR;AACD;;AACD,eAAO,CAAP;AACD,OARD,CADJ,GAUIf,KAAK,CAACL,SAAN,CAAgBiB,IAAhB,CAAqB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACnC,YAAID,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB;AACnB,iBAAO,CAAC,CAAR;AACD;;AACD,YAAID,CAAC,CAACC,IAAF,GAASF,CAAC,CAACE,IAAf,EAAqB;AACnB,iBAAO,CAAP;AACD;;AACD,eAAO,CAAP;AACD,OARD,CAXN;AAoBA,aAAO,EACL,GAAGf,KADE;AAELL,QAAAA,SAAS,EAAEgB;AAFN,OAAP;;AAIF,SAAK,aAAL;AACE,aAAO,EACL,GAAGX,KADE;AAELF,QAAAA,MAAM,EAAEG,MAAM,CAACE;AAFV,OAAP;;AAKF;AACE,aAAOH,KAAP;AA3EJ;AA6ED;;AAED,eAAeD,WAAf","sourcesContent":["const initialState = {\r\n  pokemones: [],\r\n  allPokemones: [],\r\n  arrayTipos: [],\r\n  detail: [],\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"GET_POKEMONS\":\r\n      return {\r\n        ...state,\r\n        pokemones: action.payload,\r\n        allPokemones: action.payload,\r\n      };\r\n\r\n    case \"GET_NAME_POKEMONES\":\r\n      return {\r\n        ...state,\r\n        pokemones: action.payload,\r\n      };\r\n\r\n    case \"POST_POKEMON\":\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case \"GET_TIPOS\":\r\n      return {\r\n        ...state,\r\n        arrayTipos: action.payload,\r\n      };\r\n\r\n    case \"FILTER_CREATED\":\r\n      const createdFilter =\r\n        action.payload === \"created\"\r\n          ? state.allPokemones.filter((el) => el.createInDb)\r\n          : state.allPokemones.filter((el) => !el.createInDb);\r\n      return {\r\n        ...state,\r\n        pokemones: createdFilter,\r\n      };\r\n    case \"FILTER_TIPOS\":\r\n      const filtrar = state.allPokemones.filter(\r\n        (el) => !el.tipo.includes(action.payload)\r\n      );\r\n      return {\r\n        ...state,\r\n        pokemones: filtrar,\r\n      };\r\n\r\n    case \"ORDER_ALFABETICO\":\r\n      let sortedArr =\r\n        action.payload === \"asc\"\r\n          ? state.pokemones.sort(function (a, b) {\r\n              if (a.name > b.name) {\r\n                return 1;\r\n              }\r\n              if (b.name > a.name) {\r\n                return -1;\r\n              }\r\n              return 0;\r\n            })\r\n          : state.pokemones.sort(function (a, b) {\r\n              if (a.name > b.name) {\r\n                return -1;\r\n              }\r\n              if (b.name > a.name) {\r\n                return 1;\r\n              }\r\n              return 0;\r\n            });\r\n      return {\r\n        ...state,\r\n        pokemones: sortedArr,\r\n      };\r\n    case \"GET_DETAILS\":\r\n      return {\r\n        ...state,\r\n        detail: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}